(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[6],{

/***/ "./src/api/air_quality.js":
/*!********************************!*\
  !*** ./src/api/air_quality.js ***!
  \********************************/
/*! exports provided: ranking, airCityData, airCityAssessCondition, airCityAssessTendency, airPollutantRatio, airPollutantSiteRatio, airPollutantYear, airPollutantSiteYear, airQualityRanking, airQualitySiteList, airRanking, overproofAlerts, airRankinasdasdag, airQualitySiteData, airQualitySiteDataType, siteComparison, airQualitySiteDataTypeAnother, getAirSite, airQualitySiteCalendar, iaqiCalendar, airYearCalendar, weatherForecast, getDivisionName, yearAirQualityRatio, airSiteQualityRanking, regionQualityRanking, airRegion, pollSize, typeList, treeList, pollList, regionPrediction, airMl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ranking\", function() { return ranking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airCityData\", function() { return airCityData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airCityAssessCondition\", function() { return airCityAssessCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airCityAssessTendency\", function() { return airCityAssessTendency; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airPollutantRatio\", function() { return airPollutantRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airPollutantSiteRatio\", function() { return airPollutantSiteRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airPollutantYear\", function() { return airPollutantYear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airPollutantSiteYear\", function() { return airPollutantSiteYear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airQualityRanking\", function() { return airQualityRanking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airQualitySiteList\", function() { return airQualitySiteList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airRanking\", function() { return airRanking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"overproofAlerts\", function() { return overproofAlerts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airRankinasdasdag\", function() { return airRankinasdasdag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airQualitySiteData\", function() { return airQualitySiteData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airQualitySiteDataType\", function() { return airQualitySiteDataType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"siteComparison\", function() { return siteComparison; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airQualitySiteDataTypeAnother\", function() { return airQualitySiteDataTypeAnother; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAirSite\", function() { return getAirSite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airQualitySiteCalendar\", function() { return airQualitySiteCalendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iaqiCalendar\", function() { return iaqiCalendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airYearCalendar\", function() { return airYearCalendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"weatherForecast\", function() { return weatherForecast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDivisionName\", function() { return getDivisionName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"yearAirQualityRatio\", function() { return yearAirQualityRatio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airSiteQualityRanking\", function() { return airSiteQualityRanking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regionQualityRanking\", function() { return regionQualityRanking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airRegion\", function() { return airRegion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pollSize\", function() { return pollSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"typeList\", function() { return typeList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"treeList\", function() { return treeList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pollList\", function() { return pollList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regionPrediction\", function() { return regionPrediction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"airMl\", function() { return airMl; });\n/* harmony import */ var _request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request */ \"./src/api/request.js\");\n\nvar baseUrl =  false ? undefined : \"/air\"; //服务器是air类，本地没有加\n\n/*\r\n首页空气质量接口\r\n */\n\nfunction ranking(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/competition/ranking',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--小时、日数据\r\n */\n\nfunction airCityData(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airCityData',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--考核情况\r\n */\n\nfunction airCityAssessCondition(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airCityAssessCondition',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--趋势统计\r\n */\n\nfunction airCityAssessTendency(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airCityAssessTendency',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--污染物占比--行政区域的\r\n */\n\nfunction airPollutantRatio(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airPollutantRatio',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--污染物占比--站点的\r\n */\n\nfunction airPollutantSiteRatio(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airPollutantSiteRatio',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--污染物年度统计--区域的\r\n */\n\nfunction airPollutantYear(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airPollutantYear',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--污染物年度统计--单个站点的\r\n */\n\nfunction airPollutantSiteYear(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airPollutantSiteYear',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--排名\r\n */\n\nfunction airQualityRanking(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airQualityRanking',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气质量站点数据-国考/省考列表\r\n */\n\nfunction airQualitySiteList(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airQualitySitesData',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气站点排名\r\n */\n\nfunction airRanking(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airRanking',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--近24小时超标告警\r\n */\n\nfunction overproofAlerts(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/overproofAlerts',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气站点排名\r\n */\n\nfunction airRankinasdasdag(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airRanking',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--单站点站点数据\r\n */\n\nfunction airQualitySiteData(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airQualitySiteData',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--单站点站点小时、日数据-模块\r\n */\n\nfunction airQualitySiteDataType(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airQualitySiteDataType',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--单站点站点小时、日数据-对比数据折线图\r\n */\n\nfunction siteComparison(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/siteComparison',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--单站站点数据 五分钟 同比--折线图和数据列表\r\n */\n\nfunction airQualitySiteDataTypeAnother(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airQualitySiteDataTypeAnother',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气站点\r\n */\n\nfunction getAirSite(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/getAirSite',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气站点日历\r\n */\n\nfunction airQualitySiteCalendar(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airQualitySiteCalendar',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气站点日历iaqi\r\n */\n\nfunction iaqiCalendar(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/iaqiCalendar',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--空气站点全年日历\r\n */\n\nfunction airYearCalendar(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airYearCalendar',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--天气预报\r\n */\n\nfunction weatherForecast(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/weatherForecast',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气质量--行政区划\r\n */\n\nfunction getDivisionName(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/getDivisionName',\n    method: 'get' // params: data\n\n  });\n}\n/*\r\n空气质量--全年空气质量占比\r\n */\n\nfunction yearAirQualityRatio(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/yearAirQualityRatio',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-站点空气质量排名\r\n */\n\nfunction airSiteQualityRanking(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airSiteQualityRanking',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-区县空气质量排名\r\n */\n\nfunction regionQualityRanking(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/regionQualityRanking',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-区县空气描述\r\n */\n\nfunction airRegion(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQuality/airRegion',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-站点涉气污染源数据\r\n */\n\nfunction pollSize(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/pollSize',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-站点涉气污染源一级\r\n */\n\nfunction typeList(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/typeList',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-站点涉气污染源子集\r\n */\n\nfunction treeList(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/treeList',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-站点涉气污染源子集站点信息\r\n */\n\nfunction pollList(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/pollList',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-空气预报\r\n */\n\nfunction regionPrediction(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/regionPrediction',\n    method: 'get',\n    params: data\n  });\n}\n/*\r\n空气-站点周边气象站\r\n */\n\nfunction airMl(data) {\n  return Object(_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    url: baseUrl + '/airQualitySite/airMl',\n    method: 'get',\n    params: data\n  });\n}\n\n//# sourceURL=webpack:///./src/api/air_quality.js?");

/***/ }),

/***/ "./src/utils/airUtils.js":
/*!*******************************!*\
  !*** ./src/utils/airUtils.js ***!
  \*******************************/
/*! exports provided: AQIJugdeBgColor, AQIJugdeTextColor, AQIJugdeFilterColor, getMark, getCalenderBgColor, factorHTML, getColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AQIJugdeBgColor\", function() { return AQIJugdeBgColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AQIJugdeTextColor\", function() { return AQIJugdeTextColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AQIJugdeFilterColor\", function() { return AQIJugdeFilterColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMark\", function() { return getMark; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCalenderBgColor\", function() { return getCalenderBgColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"factorHTML\", function() { return factorHTML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColor\", function() { return getColor; });\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ \"./node_modules/core-js/modules/es.array.concat.js\");\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ \"./node_modules/core-js/modules/es.string.replace.js\");\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n//日历字体颜色\nvar textColors = ['rgba(204, 204, 204, 1)', 'rgba(0, 228, 0, 1)', 'rgba(255, 191, 0, 1)', 'rgba(255, 126, 0, 1)', 'rgba(255, 0, 0, 1)', 'rgba(153, 0, 76, 1)', 'rgba(126, 0, 75, 1)']; //日历背景颜色\n\nvar bgColors = ['rgba(204, 204, 204, 0.3)', 'rgba(0, 228, 0, 0.3)', 'rgba(255, 191, 0, 0.3)', 'rgba(255, 126, 0, 0.3)', 'rgba(255, 0, 0, 0.3)', 'rgba(153, 0, 76, 0.3)', 'rgba(126, 0, 75, 0.3)'];\n/**\n * 判断AQI背景颜色\n * @param value 值\n * */\n\nvar AQIJugdeBgColor = function AQIJugdeBgColor(value) {\n  if (value <= 50) {\n    return 'background: ' + textColors[1];\n  } else if (value <= 100 && value > 50) {\n    return 'background: ' + textColors[2];\n  } else if (value <= 150 && value > 100) {\n    return 'background: ' + textColors[3];\n  } else if (value <= 200 && value > 150) {\n    return 'background: ' + textColors[4];\n  } else if (value <= 300 && value > 200) {\n    return 'background: ' + textColors[5];\n  } else if (value > 300) {\n    return 'background: ' + textColors[6];\n  } else {\n    return 'background: ' + textColors[0];\n  }\n};\n/**\n * 判断AQI字体颜色\n * @param value 值\n * */\n\nvar AQIJugdeTextColor = function AQIJugdeTextColor(value) {\n  if (value <= 50) {\n    return 'color:' + textColors[1];\n  } else if (value <= 100 && value > 50) {\n    return 'color:' + textColors[2];\n  } else if (value <= 150 && value > 100) {\n    return 'color:' + textColors[3];\n  } else if (value <= 200 && value > 150) {\n    return 'color:' + textColors[4];\n  } else if (value <= 300 && value > 200) {\n    return 'color:' + textColors[5];\n  } else if (value > 300) {\n    return 'color:' + textColors[6];\n  } else {\n    return 'color:' + textColors[0];\n  }\n};\n/**\n * 判断AQI背景半透明颜色\n * @param value 值\n * */\n\nvar AQIJugdeFilterColor = function AQIJugdeFilterColor(value) {\n  if (value <= 50) {\n    return 'background:' + bgColors[1];\n  } else if (value <= 100 && value > 50) {\n    return 'background:' + bgColors[2];\n  } else if (value <= 150 && value > 100) {\n    return 'background:' + bgColors[3];\n  } else if (value <= 200 && value > 150) {\n    return 'background:' + bgColors[4];\n  } else if (value <= 300 && value > 200) {\n    return 'background:' + bgColors[5];\n  } else if (value > 300) {\n    return 'background:' + bgColors[6];\n  } else {\n    return 'background:' + bgColors[0];\n  }\n};\nvar standard = {\n  PM25: [0, 35, 75, 115, 150, 250, 350, 500],\n  PM10: [0, 50, 150, 250, 350, 420, 500, 600],\n  SO2: [0, 50, 150, 475, 800, 1600, 2100, 2620],\n  NO2: [0, 40, 80, 180, 280, 565, 750, 940],\n  CO: [0, 2, 4, 14, 24, 36, 48, 60],\n  O3_1H: [0, 160, 200, 300, 400, 800, 1000, 1200],\n  O3_8H: [0, 100, 160, 215, 265, 800],\n  O3: [0, 100, 160, 215, 265, 800, 1000, 1200],\n  AQI: [0, 50, 100, 150, 200, 300, 400, 500],\n  pm25: [0, 35, 75, 115, 150, 250, 350, 500],\n  pm10: [0, 50, 150, 250, 350, 420, 500, 600],\n  so2: [0, 50, 150, 475, 800, 1600, 2100, 2620],\n  no2: [0, 40, 80, 180, 280, 565, 750, 940],\n  co: [0, 2, 4, 14, 24, 36, 48, 60],\n  OZONE: [0, 100, 160, 215, 265, 800, 1000, 1200],\n  ozone: [0, 100, 160, 215, 265, 800, 1000, 1200],\n  aqi: [0, 50, 100, 150, 200, 300]\n};\nvar levels = ['-', '优', '良', '轻度污染', '中度污染', '重度污染', '严重污染', '-'];\nvar colors = ['#AAA', '#49E07F', '#FEC400', '#f6960e', '#DC6A59', '#7A66D2', '#9F4A7C', '#6c6c6c']; // 设置标准值\n\nvar getMark = function getMark(factor) {\n  // factor = factor === \"O3\" ? \"O3_8H\" :factor === \"PM2.5\"?'PM25': factor;\n  factor = factor === \"PM2.5\" ? 'PM25' : factor;\n  var vals = factor.indexOf(\"IAQI\") === -1 ? standard[factor] : standard.AQI;\n  var markLine = [];\n\n  for (var i = 0; i < levels.length; i++) {\n    markLine.push({\n      // name: standard[i],\n      yAxis: vals[i],\n      label: {\n        // 显示基准线名称\n        show: true,\n        padding: levels[i] == '优' || levels[i] == '良' ? [-13, -10, 15, -10] : [-13, -10, 15, -40],\n        // 标签位置上右下左\n        position: 'end',\n        // 标签的位置\n        formatter: levels[i],\n        color: colors[i],\n        fontSize: 12\n      },\n      lineStyle: {\n        color: colors[i]\n      }\n    });\n  }\n\n  return markLine;\n};\n/***\n * （内部调用）获取因子值对应的index\n * @param factor\n * @param value\n * @return {number} index\n */\n\nfunction getLevelIndex(factor, value) {\n  var stands = standard[factor];\n\n  for (var i = 0; i < stands.length; i++) {\n    if (stands[i] >= value) {\n      return i;\n    }\n  }\n}\n\nfunction getLevelIndex2(value) {\n  var stands = levels[value];\n\n  for (var i = 0; i < stands.length; i++) {\n    if (stands[i] == value) {\n      return i;\n    }\n  }\n}\n/**\n * 获取因子值对应的日历块背景色\n * @param factor 因子名称\n */\n\n\nvar getCalenderBgColor = function getCalenderBgColor(factor, value) {\n  if (value === '') {\n    var _color = 'rgba(201, 255, 201, 0.5)';\n    return \"background-color:\".concat(_color, \";color:rgba(4, 199, 4, 0.5)\");\n  }\n\n  if (factor === 'PM2.5') {\n    factor = 'PM25';\n  }\n\n  var color = bgColors[getLevelIndex(factor, value)]; // let color = bgColors[getLevelIndex2(value.state)];\n\n  var fontColor = '';\n\n  if (color === '#ffcc00') {\n    fontColor = '#000';\n  } else {\n    fontColor = textColors[getLevelIndex(factor, value)]; // fontColor = textColors[getLevelIndex2(value.state)];\n  }\n\n  return \"background-color:\".concat(color, \";color:\").concat(fontColor);\n};\n/***\n * 转换AQI因子格式\n * @param {string} factor\n * @return {string}\n */\n\nvar factorHTML = function factorHTML(factor) {\n  var str = \"\";\n  if (!factor) return str;\n\n  switch (factor.toUpperCase().replace('IAQI', '')) {\n    case 'AQI':\n      str = \"AQI\";\n      break;\n\n    case 'PM25':\n      str = \"PM2.5\";\n      break;\n\n    case 'PM10':\n      str = \"PM10\";\n      break;\n\n    case 'SO2':\n      str = \"SO2\";\n      break;\n\n    case 'NO2':\n      str = \"NO2\";\n      break;\n\n    case 'CO':\n      str = \"CO\";\n      break;\n\n    case 'O3':\n      str = \"O3\";\n      break;\n\n    case 'O31H':\n      str = \"O3\";\n      break;\n\n    case 'O38H':\n      str = \"O3\";\n      break;\n\n    case 'O3_1H':\n      str = \"O3\";\n      break;\n\n    case 'O3_8H':\n      str = \"O3\";\n      break;\n  }\n\n  return str;\n};\n/***\n * 获取因子值对应的类别\n * @param factor\n * @param value\n * @return {string} level\n */\n\nvar getColor = function getColor(factor, value) {\n  if (value === \"-\") return \"-\";\n  return levels[getLevelIndex(factor, value)];\n};\n\n//# sourceURL=webpack:///./src/utils/airUtils.js?");

/***/ })

}]);